@using NRZMyk.Services.Data.Entities
@using NRZMyk.Components.SharedComponents.Input
@using NRZMyk.Services.Utils
@inherits CreateBase

<h2>@Title</h2>

<div>
    <EditForm Model="SentinelEntry" OnValidSubmit="@SubmitClick">

        <DataAnnotationsValidator />

        <div class="form-group row">
            <label class="col-form-label col-sm-4">Material</label>
            <div class="col-sm-6">
                <InputSelect class="form-control" @bind-Value="SentinelEntry.Material">
                    @foreach (var material in EnumUtils.AllEnumValues<Material>())
                    {
                        <option value="@material">@EnumUtils.GetEnumDescription(material)</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => SentinelEntry.Material" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-4">Alter des Patienten</label>
            <div class="col-sm-6">
                <InputSelect class="form-control" @bind-Value="SentinelEntry.AgeGroup">
                    @foreach (var ageGroup in EnumUtils.AllEnumValues<AgeGroup>())
                    {
                        <option value="@ageGroup">@EnumUtils.GetEnumDescription(ageGroup)</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => SentinelEntry.AgeGroup" />
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-sm-4">Probenentnahme</label>
            <div class="col-sm-6">
                <InputDate class="form-control" @bind-Value="SentinelEntry.SamplingDate" />
                <ValidationMessage For="() => SentinelEntry.SamplingDate" />
            </div>
        </div>

        <InputTextWithValidation FieldName="Labornummer Einsender" @bind-Value="SentinelEntry.SenderLaboratoryNumber" For="() => SentinelEntry.SenderLaboratoryNumber" />

        <div class="form-group row">
            <label class="col-form-label col-sm-4">Station</label>
            <div class="col-sm-3">
                <InputSelect class="form-control" @bind-Value="SentinelEntry.HospitalDepartmentType">
                    @foreach (var departmentType in EnumUtils.AllEnumValues<HospitalDepartmentType>())
                    {
                        <option value="@departmentType">@EnumUtils.GetEnumDescription(departmentType)</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => SentinelEntry.HospitalDepartmentType" />
            </div>
            <div class="col-sm-3">
                <InputSelect class="form-control" @bind-Value="SentinelEntry.HospitalDepartment">
                    @foreach (var department in EnumUtils.AllEnumValues<HospitalDepartment>())
                    {
                        <option value="@department">@EnumUtils.GetEnumDescription(department)</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => SentinelEntry.HospitalDepartment" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-4">Spezies</label>
            <div class="col-sm-6">
                <InputSelect class="form-control" @bind-Value="SentinelEntry.IdentifiedSpecies">
                    @foreach (var species in EnumUtils.AllEnumValues<Species>())
                    {
                        <option value="@species">@EnumUtils.GetEnumDescription(species)</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => SentinelEntry.IdentifiedSpecies" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-4">Methode Speziesidentifikation</label>
            <div class="col-sm-6">
                <InputSelect class="form-control" @bind-Value="SentinelEntry.SpeciesIdentificationMethod">
                    @foreach (var identificationMethod in EnumUtils.AllEnumValues<SpeciesIdentificationMethod>())
                    {
                        <option value="@identificationMethod">@EnumUtils.GetEnumDescription(identificationMethod)</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => SentinelEntry.SpeciesIdentificationMethod" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-4">Anmerkungen</label>
            <div class="col-sm-6">
                <InputTextArea class="form-control" @bind-Value="SentinelEntry.Remark" />
                <ValidationMessage For="() => SentinelEntry.Remark" />
            </div>
        </div>

        <h3>Tests</h3>
        <div class="form-group row">
            <div class="col-sm-3">
                <select class="form-control custom-select-sm" @bind="TestingMethod">
                    @foreach (var testingMethod in EnumUtils.AllEnumValues<SpeciesTestingMethod>().Where(t => t == SpeciesTestingMethod.Vitek))
                    {
                        <option value="@testingMethod">@EnumUtils.GetEnumDescription(testingMethod)</option>
                    }
                </select>
            </div>
            <div class="col-sm-3">
                <select class="form-control custom-select-sm" @bind="AntifungalAgent">
                    @foreach (var antifungalAgent in EnumUtils.AllEnumValues<AntifungalAgent>().Where(t =>

                        new List<AntifungalAgent> {AntifungalAgent.Micafungin, AntifungalAgent.Caspofungin, AntifungalAgent.Voriconazole, AntifungalAgent.Fluconazole, AntifungalAgent.AmphotericinB}.Contains(t)))
                    {
                        <option value="@antifungalAgent">@EnumUtils.GetEnumDescription(antifungalAgent)</option>
                    }
                </select>
            </div>
            <div class="col-sm-4">
                <button type="button" id="addAntimicrobialSensitivityTest" class="btn btn-sm btn-outline-secondary" @onclick="AddAntimicrobialSensitivityTest">Neuer MHK Eintrag</button>
            </div>
        </div>

        @foreach (var sensitivityTest in RecalculateResistance())
        {
            <div class="form-group row">
                <div class="col-sm-2">
                    <p class="form-control-plaintext">
                        <b>@sensitivityTest.TestingMethod</b> - @sensitivityTest.AntifungalAgent
                    </p>
                </div>

                <div class="col-sm-2">
                    <div class="input-group mb-2 mr-sm-2">
                        <div class="input-group-prepend">
                            <div class="input-group-text">MHK</div>
                        </div>
                        @if (MicSteps(sensitivityTest).Any())
                        {
                            <InputSelectNumber class="form-control" @bind-Value="sensitivityTest.MinimumInhibitoryConcentration">
                                @foreach (var micStep in MicSteps(sensitivityTest))
                                {
                                    <option value="@micStep.Value">@micStep.Title</option>
                                }
                            </InputSelectNumber>
                        }
                        else
                        {
                            <InputNumber class="form-control" @bind-Value="sensitivityTest.MinimumInhibitoryConcentration"></InputNumber>
                        }
                    </div>
                </div>
                @if (ApplicableBreakpoints(sensitivityTest).Any())
                {
                    <div class="col-sm-4">
                        <InputSelectNumber class="form-control" @bind-Value="sensitivityTest.ClinicalBreakpointId">
                            @foreach (var breakpoint in ApplicableBreakpoints(sensitivityTest))
                            {
                                <option value="@breakpoint.Id">@breakpoint.Title</option>
                            }
                        </InputSelectNumber>
                    </div>
                    <div class="col-sm-4">
                        <p class="form-control-plaintext">
                            <span class="badge @(ResistanceBadge(sensitivityTest))">
                                @EnumUtils.GetEnumDescription(sensitivityTest.Resistance)
                            </span>
                            <span class="badge badge-pill">@sensitivityTest.ClinicalBreakpointId</span>
                        </p>
                    </div>
                }
                else
                {
                    <div class="col-sm-8">
                        <p class="form-control-plaintext">
                            Kein Breakpoint für Antimykotikum <i>"@EnumUtils.GetEnumDescription(sensitivityTest.AntifungalAgent)"</i>
                            und Spezies <i>"@EnumUtils.GetEnumDescription(SentinelEntry.IdentifiedSpecies)"</i> verfügbar.
                        </p>
                    </div>
                }
            </div>
        }

        <div class="form-group row">
            <div class="offset-4 col-sm-6 text-right">
                <a href="" @onclick="() => OnCloseClick.InvokeAsync(null)" @onclick:preventDefault class="btn btn-secondary">
                    Abbrechen
                </a>
                <button type="submit" class="btn btn-primary">
                    @PrimaryAction
                </button>
            </div>
        </div>
    </EditForm>
</div>